//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Entitas.MoveDirComponent moveDir { get { return (Game.Entitas.MoveDirComponent)GetComponent(GameComponentsLookup.MoveDir); } }
    public bool hasMoveDir { get { return HasComponent(GameComponentsLookup.MoveDir); } }

    public void AddMoveDir(Game.InputModule.EMoveDir newM_MoveDir) {
        var index = GameComponentsLookup.MoveDir;
        var component = (Game.Entitas.MoveDirComponent)CreateComponent(index, typeof(Game.Entitas.MoveDirComponent));
        component.m_MoveDir = newM_MoveDir;
        AddComponent(index, component);
    }

    public void ReplaceMoveDir(Game.InputModule.EMoveDir newM_MoveDir) {
        var index = GameComponentsLookup.MoveDir;
        var component = (Game.Entitas.MoveDirComponent)CreateComponent(index, typeof(Game.Entitas.MoveDirComponent));
        component.m_MoveDir = newM_MoveDir;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveDir() {
        RemoveComponent(GameComponentsLookup.MoveDir);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMoveDir;

    public static Entitas.IMatcher<GameEntity> MoveDir {
        get {
            if (_matcherMoveDir == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveDir);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMoveDir = matcher;
            }

            return _matcherMoveDir;
        }
    }
}
